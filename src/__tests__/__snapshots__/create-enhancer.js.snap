// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`createEnhancer can create enhancer chainable with non-async enhancers and be invoked in correct order when enhance async function 1`] = `
Array [
  Array [
    "enhancerA",
    Object {
      "arg": "init",
    },
  ],
  Array [
    "enhancerB",
    Object {
      "arg": "init",
      "enhancerA": "called",
    },
  ],
  Array [
    "asyncTargetFunction",
    Object {
      "arg": "init",
      "enhancerA": "called",
      "enhancerB": "called",
    },
  ],
]
`;

exports[`createEnhancer can create enhancer chainable with non-async enhancers and be invoked in correct order when enhance async function 2`] = `
Object {
  "arg": "init",
  "enhancerA": "called",
  "enhancerB": "called",
}
`;

exports[`createEnhancer can create enhancer chainable with non-async enhancers and be invoked in correct order when enhance async function 3`] = `
Array [
  Array [
    "enhancerB",
    Object {
      "arg": "init",
    },
  ],
  Array [
    "enhancerA",
    Object {
      "arg": "init",
      "enhancerB": "called",
    },
  ],
  Array [
    "targetFunction",
    Object {
      "arg": "init",
      "enhancerA": "called",
      "enhancerB": "called",
    },
  ],
]
`;

exports[`createEnhancer can create enhancer chainable with non-async enhancers and be invoked in correct order when enhance async function 4`] = `
Object {
  "arg": "init",
  "enhancerA": "called",
  "enhancerB": "called",
}
`;

exports[`createEnhancer can create enhancer chainable with non-async enhancers and be invoked in correct order when enhance non-async function 1`] = `
Array [
  Array [
    "enhancerA",
    Object {
      "arg": "init",
    },
  ],
  Array [
    "enhancerB",
    Object {
      "arg": "init",
      "enhancerA": "called",
    },
  ],
  Array [
    "targetFunction",
    Object {
      "arg": "init",
      "enhancerA": "called",
      "enhancerB": "called",
    },
  ],
]
`;

exports[`createEnhancer can create enhancer chainable with non-async enhancers and be invoked in correct order when enhance non-async function 2`] = `
Object {
  "arg": "init",
  "enhancerA": "called",
  "enhancerB": "called",
}
`;

exports[`createEnhancer can create enhancer chainable with non-async enhancers and be invoked in correct order when enhance non-async function 3`] = `
Array [
  Array [
    "enhancerB",
    Object {
      "arg": "init",
    },
  ],
  Array [
    "enhancerA",
    Object {
      "arg": "init",
      "enhancerB": "called",
    },
  ],
  Array [
    "targetFunction",
    Object {
      "arg": "init",
      "enhancerA": "called",
      "enhancerB": "called",
    },
  ],
]
`;

exports[`createEnhancer can create enhancer chainable with non-async enhancers and be invoked in correct order when enhance non-async function 4`] = `
Object {
  "arg": "init",
  "enhancerA": "called",
  "enhancerB": "called",
}
`;

exports[`createEnhancer can create enhancer when input is invalid throws error 1`] = `"input of enhancementFunction in createEnhancer needs to be function or a function bundle (Object)"`;

exports[`createEnhancer can create enhancer when input is invalid throws error 2`] = `"all properties in a function bundle must be function, check .foo"`;
